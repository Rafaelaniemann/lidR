% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LASmethods-generic.r, R/LASmethods-LAS.r,
%   R/LASmethods-LAScatalog.r, R/LASmethods-LASheader.r
\docType{methods}
\name{plot}
\alias{plot}
\alias{plot,LAS,missing-method}
\alias{plot,LAScatalog,missing-method}
\alias{plot,LASheader,missing-method}
\title{Plot a LAS* object}
\usage{
plot(x, y, ...)

\S4method{plot}{LAS,missing}(x, y, color = "Z",
  colorPalette = height.colors(50), bg = "black", trim = Inf,
  backend = c("rgl", "pcv"), clear_artifact = FALSE, nbits = 16, ...)

\S4method{plot}{LAScatalog,missing}(x, y, mapview = TRUE, ...)

\S4method{plot}{LASheader,missing}(x, y, mapview = TRUE, ...)
}
\arguments{
\item{x}{A \code{LAS*} object}

\item{y}{Unused (inherited from R base)}

\item{...}{Will be passed to \link[rgl:points3d]{points3d} (LAS) or \link[graphics:plot]{plot}
if \code{mapview = FALSE} or to \link[mapview:mapView]{mapview} if \code{mapview = TRUE} (LAScatalog).}

\item{color}{characters. The attribute used to color the point cloud. Default is Z coordinates. RGB
is an allowed string even if it refers to three attributes at a time.}

\item{colorPalette}{characters. A vector of colors such as that generated by heat.colors,
topo.colors, terrain.colors or similar functions. Default is \code{height.colors(50)}
provided by the package \code{lidR}}

\item{bg}{The color for the background. Default is black.}

\item{trim}{numeric. Enables trimming of values when outliers break the color palette range.
Every point with a value higher than \code{trim} will be plotted with the highest color.}

\item{backend}{character. Can be \code{"rgl"} or \code{"pcv"}. If \code{"rgl"} is chosen
the display relies on the \code{rgl} package. If \code{"pcv"} is chosen it relies on the
\code{PointCloudViewer} package which is much more efficient and can handle million of points
using few memory. \code{PointCloudViewer} is not available on CRAN yet and should
be install from github (see. \url{https://github.com/Jean-Romain/PointCloudViewer}).}

\item{clear_artifact}{logical. It is a known and docunented issue that the 3D visialisation with
\code{rgl} displays artifacts. The points look aligned and/or regularly space in some view angle.
This is because \code{rgl} computes with single precision \code{float}. To fix that the user can
set this option to \code{TRUE}. In this case the point cloud is shifted to (0,0) to reduce the
number of digit needed to represent its coordinates. The drawback is that the user cannot anymore
add easily other objects in the scene since de coordinates will not match anymore. If \code{clear_artifact = TRUE}
the function returns the xy shift values invisibly.}

\item{nbits}{integer. If \code{color = RGB} it assume that RGB color are coded on 16 bits as described
in the LAS format specifications. Actually this is not always respected. If the colors are stored
on 8 bits set this parameter to 8.}

\item{mapview}{logical. If \code{FALSE} the catalog is displayed in a regular plot from R base.}
}
\description{
Plot displays a 3D interactive windows based on rgl for \link{LAS} objects

Plot displays an interactive view for \link[lidR:LAScatalog-class]{LAScatalog} objects with pan and
zoom capabilities based on \link[mapview:mapview-package]{mapview}. If the coordinate reference
system (CRS) of the \code{LAScatalog} is non empty, the plot can be displayed on top of base maps
(satellite data, elevation, street, and so on).

Plot displays a \link[lidR:LASheader-class]{LASheader} objects exactly like it displays a LAScatalog
objects.
}
\section{Methods (by class)}{
\itemize{
\item \code{x = LAScatalog,y = missing}: plot LAScatalog

\item \code{x = LASheader,y = missing}: plot LASheader
}}

\examples{
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
las <- readLAS(LASfile)

plot(las, clear_artifact = TRUE)

# Outliers in intensity breaks the color range. Use the trim parameter.
col <- heat.colors(50)
plot(las, color = Intensity, colorPalette = col, clear_artifact = TRUE)
plot(las, color = Intensity, colorPalette = col, trim = 70, clear_artifact = TRUE)

\dontrun{

# single file catalog using data provided in lidR
ctg = catalog(LASfile)
plot(ctg)
}

\dontrun{

# single file catalog using data provided in lidR
ctg = catalog(LASfile)
plot(ctg)
}
}
